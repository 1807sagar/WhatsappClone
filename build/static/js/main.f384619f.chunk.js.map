{"version":3,"sources":["firebase.js","StateProvider.js","reducer.js","SidebarChat.js","constants.js","UseWindowDimensions.js","Loader.js","Sidebar.js","Chat.js","Login.js","App.js","serviceWorker.js","index.js"],"names":["db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","StateProvider","reducer","initialState","children","Provider","value","useReducer","useStateValue","useContext","actionTypes","state","action","type","user","localStorage","setItem","uid","displayName","photoURL","console","log","togglerState","SidebarChat","props","useState","seed","setSeed","addNewChatVal","name","id","messages","setMessages","dispatch","useEffect","collection","doc","orderBy","onSnapshot","snapshot","docs","map","data","Math","floor","random","className","to","onClick","Avatar","src","length","message","prompt","delete","then","window","location","catch","error","alert","roomName","add","timestamp","FieldValue","serverTimestamp","getWindowDimensions","width","innerWidth","height","innerHeight","UseWindowDimensions","windowDimensions","setWindowDimensions","handleResize","addEventListener","removeEventListener","Loader","class","Sidebar","rooms","setRooms","toggler","setToggler","sidebarBool","setsidebarBool","search","setSearch","input","setInput","setLogout","handleChange","e","target","exitApp","removeItem","reload","s","values","re","RegExp","toLowerCase","split","join","filter","v","match","matcher","unsubscribe","getItem","IconButton","color","aria-label","edge","style","placeholder","onChange","room","key","Chat","roomId","useParams","setRoomName","emoji","setEmoji","issendChecked","setIssendChecked","datewise","setDateWise","clientGMT","setClinetGMT","lastseenPhoto","setLastseen","hour","extramin","minutes","hourly","GMTminutes","String","slice","useSound","process","volume","playOn","playOff","addEmoji","native","checkEmojiClose","offset","Date","getTimezoneOffset","o","abs","getTimeZone","sendMessage","preventDefault","blankObj","TotalObj","blankArray","dateArray","forEach","i","messageDate","toDate","toUTCString","indexOf","push","index","messageData","messagesEndRef","useRef","scrollToBottom","current","scrollIntoView","behavior","handleDrawerToggle","item","Object","keys","parseInt","getDate","substr","ref","onSelect","disabled","undefined","properties","fontWeight","Login","alt","Button","signInWithPopup","result","err","App","path","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f384619f.chunk.js","sourcesContent":["import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\n// const firebaseConfig = {\r\n//     apiKey: \"AIzaSyB13PntUEDMkFbTt2psiHOZtQih83qrf88\",\r\n//     authDomain: \"whatsapp-clone-fafc9.firebaseapp.com\",\r\n//     databaseURL: \"https://whatsapp-clone-fafc9.firebaseio.com\",\r\n//     projectId: \"whatsapp-clone-fafc9\",\r\n//     storageBucket: \"whatsapp-clone-fafc9.appspot.com\",\r\n//     messagingSenderId: \"1027981883218\",\r\n//     appId: \"1:1027981883218:web:f62f32ffe8e5701f0f2c8b\",\r\n//     measurementId: \"G-0YMF5ZZL8N\"\r\n//   };\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyD3c-g9buyeJnYZ-6_1NDZ8TQz1n4fhKn4\",\r\n  authDomain: \"whatsapp-73989.firebaseapp.com\",\r\n  databaseURL: \"https://whatsapp-73989.firebaseio.com\",\r\n  projectId: \"whatsapp-73989\",\r\n  storageBucket: \"whatsapp-73989.appspot.com\",\r\n  messagingSenderId: \"166827944927\",\r\n  appId: \"1:166827944927:web:28451dca14499bc919326a\",\r\n  measurementId: \"G-E7CXYXDVYG\",\r\n};\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\nconst provider = new firebase.auth.GoogleAuthProvider();\r\n\r\nexport { auth, provider };\r\nexport default db;\r\n","import React, { createContext, useContext, useReducer } from \"react\";\r\n\r\nexport const StateContext = createContext();\r\n\r\nexport const StateProvider = ({ reducer, initialState, children }) => (\r\n  <StateContext.Provider value={useReducer(reducer, initialState)}>\r\n    {children}\r\n  </StateContext.Provider>\r\n);\r\n\r\nexport const useStateValue = () => useContext(StateContext);\r\n","export const initialState = {\r\n  user: null,\r\n  uid: null,\r\n  togglerState: 1,\r\n  photoURL: \"\",\r\n};\r\n\r\nexport const actionTypes = {\r\n  SET_USER: \"SET_USER\",\r\n  SET_SESSION: \"SET_SESSION\",\r\n  SET_TOGGLER: \"SET_TOGGLER\",\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case actionTypes.SET_USER:\r\n      return {\r\n        ...state,\r\n        user: action.user,\r\n      };\r\n    case actionTypes.SET_SESSION:\r\n      localStorage.setItem(\"uid\", action.uid);\r\n      localStorage.setItem(\"displayName\", action.displayName);\r\n      localStorage.setItem(\"photoURL\", action.photoURL);\r\n      console.log(\"session added to storage\");\r\n      return {\r\n        ...state,\r\n        uid: action.uid,\r\n        displayName: action.displayName,\r\n        photoURL: action.photoURL,\r\n      };\r\n    case actionTypes.SET_TOGGLER:\r\n      return {\r\n        ...state,\r\n        togglerState: action.togglerState,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Avatar } from \"@material-ui/core\";\r\nimport \"./SidebarChat.css\";\r\nimport db from \"./firebase\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./reducer\";\r\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport firebase from \"firebase\";\r\nimport { password } from \"./constants\";\r\nfunction SidebarChat(props) {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const { addNewChatVal, name, id } = props;\r\n  const [messages, setMessages] = useState([]);\r\n  const [{ togglerState }, dispatch] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    if (id) {\r\n      db.collection(\"rooms\")\r\n        .doc(id)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"desc\")\r\n        .onSnapshot((snapshot) =>\r\n          setMessages(snapshot.docs.map((doc) => doc.data()))\r\n        );\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n  }, []);\r\n  const deleteRoom = () => {\r\n    const passwordVerify = prompt(\"Enter Admin Password to delete Room\");\r\n    if (passwordVerify == password) {\r\n      db.collection(\"rooms\")\r\n        .doc(id)\r\n        .delete()\r\n        .then(function () {\r\n          window.location = \"/\";\r\n        })\r\n        .catch(function (error) {\r\n          console.error(\"Error removing document: \", error);\r\n        });\r\n    } else {\r\n      alert(\"You are not authorised to delete rooms\");\r\n    }\r\n  };\r\n\r\n  const createChat = () => {\r\n    const roomName = prompt(\"Please enter name for chat\");\r\n    if (roomName && roomName.length >= 20) {\r\n      return alert(\"enter a shorter name for the room\");\r\n    }\r\n    if (roomName) {\r\n      db.collection(\"rooms\").add({\r\n        name: roomName,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleChat = () => {\r\n    dispatch({\r\n      type: actionTypes.SET_TOGGLER,\r\n      togglerState: togglerState + 1,\r\n    });\r\n  };\r\n\r\n  return addNewChatVal !== \"true\" ? (\r\n    <div className=\"sidebarChat\">\r\n      <Link to={`/rooms/${id}`} onClick={handleChat}>\r\n        <div className=\"sidebarChat__wrapper\">\r\n          <Avatar src={`https://avatars.dicebear.com/api/male/${seed}.svg?background=%230000ff`} />\r\n          <div className=\"sidebarChat__info\">\r\n            <h2 className=\"room__name\">{name}</h2>\r\n            <p className=\"sidebar__lastmessages__color\">\r\n              <span className=\"sidebar__lastMessageName\">\r\n                {id != \"\" && messages.length > 0\r\n                  ? messages[0]?.name + \": \"\r\n                  : \"Loading: \"}\r\n              </span>\r\n              {id != \"\" && messages.length > 0\r\n                ? messages[0]?.message\r\n                : \"Start a new chat\"}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </Link>\r\n      <div className=\"sidebarChat__delete\" onClick={deleteRoom}>\r\n        <DeleteForeverIcon />\r\n      </div>\r\n    </div>\r\n  ) : (\r\n    <div onClick={createChat} className=\"sidebarChat addnew__chat\">\r\n      <h2>Add New Room</h2>\r\n      <AddCircleIcon />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SidebarChat;\r\n","export const password = \"your_password_to_delete_room\"; // enter your password here to deleet the room\r\n","import { useState, useEffect } from \"react\";\r\n\r\nfunction getWindowDimensions() {\r\n  const { innerWidth: width, innerHeight: height } = window;\r\n  return {\r\n    width,\r\n    height,\r\n  };\r\n}\r\n\r\nexport default function UseWindowDimensions() {\r\n  const [windowDimensions, setWindowDimensions] = useState(\r\n    getWindowDimensions()\r\n  );\r\n\r\n  useEffect(() => {\r\n    function handleResize() {\r\n      setWindowDimensions(getWindowDimensions());\r\n    }\r\n\r\n    window.addEventListener(\"resize\", handleResize);\r\n    return () => window.removeEventListener(\"resize\", handleResize);\r\n  }, []);\r\n\r\n  return windowDimensions;\r\n}\r\n","import React from \"react\";\r\nimport \"./Loader.css\";\r\nfunction Loader() {\r\n  return <div class=\"lds-hourglass\"></div>;\r\n}\r\n\r\nexport default Loader;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Avatar, Collapse, IconButton } from \"@material-ui/core\";\r\nimport DonutLargeIcon from \"@material-ui/icons/DonutLarge\";\r\nimport ChatIcon from \"@material-ui/icons/Chat\";\r\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\r\nimport SidebarChat from \"./SidebarChat\";\r\nimport \"./Sidebar.css\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport db from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./reducer\";\r\nimport UseWindowDimensions from \"./UseWindowDimensions\";\r\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\r\nimport Loader from \"./Loader\";\r\n\r\nfunction Sidebar() {\r\n  const [rooms, setRooms] = useState([]);\r\n  const [toggler, setToggler] = useState(false);\r\n  const [sidebarBool, setsidebarBool] = useState(true);\r\n  const [{ togglerState }, dispatch] = useStateValue();\r\n  const [search, setSearch] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [logout, setLogout] = useState(false);\r\n  const { width } = UseWindowDimensions();\r\n  const matcher = (s, values) => {\r\n    const re = RegExp(`.*${s.toLowerCase().split(\"\").join(\".*\")}.*`);\r\n    return values.filter((v) => v.data.name.toLowerCase().match(re));\r\n  };\r\n  const handleChange = (e) => {\r\n    setsidebarBool(false);\r\n    setInput(e.target.value);\r\n  };\r\n  const exitApp = () => {\r\n    localStorage.removeItem(\"uid\");\r\n    window.location.reload();\r\n    setLogout(true);\r\n  };\r\n  useEffect(() => {\r\n    if (rooms.length > 0) {\r\n      setSearch(matcher(input, rooms));\r\n    }\r\n    if (input === \"\") {\r\n      setsidebarBool(true);\r\n    }\r\n  }, [input]);\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = db\r\n      .collection(\"rooms\")\r\n      .orderBy(\"timestamp\", \"desc\")\r\n      .onSnapshot((snapshot) => {\r\n        setRooms(\r\n          snapshot.docs.map((doc) => ({\r\n            id: doc.id,\r\n            data: doc.data(),\r\n          }))\r\n        );\r\n      });\r\n    return () => {\r\n      unsubscribe();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    setToggler(!toggler);\r\n  }, [togglerState]);\r\n  const handleDrawerToggle = () => {\r\n    setToggler(toggler);\r\n\r\n    dispatch({\r\n      type: actionTypes.SET_TOGGLER,\r\n      togglerState: togglerState + 1,\r\n    });\r\n  };\r\n  const photoURL =\r\n    localStorage.getItem(\"photoURL\") !== \"\"\r\n      ? localStorage.getItem(\"photoURL\")\r\n      : null;\r\n  const displayName = localStorage.getItem(\"displayName\");\r\n\r\n  return (\r\n    <>\r\n      {width < 629 ? (\r\n        <div\r\n          className={\r\n            togglerState % 2 !== 0 ? \"sidebar\" : \"sidebar hide__sidebar\"\r\n          }\r\n        >\r\n          <div className=\"siderbar__wrapper\">\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              className=\"sidebar__burger\"\r\n              onClick={handleDrawerToggle}\r\n            >\r\n              <MenuIcon />\r\n            </IconButton>\r\n            <div className=\"sidebar__header\">\r\n              <Avatar src={photoURL} />{\" \"}\r\n              <p>\r\n                {\" \"}\r\n                <a\r\n                  style={{ color: \"white\" }}\r\n                >\r\n                  \r\n                </a>\r\n              </p>\r\n              <div className=\"sidebar__headerRight\">\r\n                <IconButton>\r\n                  <DonutLargeIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                  <ChatIcon />\r\n                </IconButton>\r\n                <IconButton>\r\n                  <div onClick={exitApp}>\r\n                    <ExitToAppIcon />\r\n                  </div>\r\n                </IconButton>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"sidebar__search\">\r\n            <div className=\"sidebar__searchContainer\">\r\n              <SearchOutlined />\r\n              <input\r\n                placeholder=\"Search or Start a new chat\"\r\n                value={input}\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          {sidebarBool ? (\r\n            <div className=\"sidebar__chats\">\r\n              <SidebarChat addNewChatVal=\"true\" />\r\n              {rooms.map((room) => (\r\n                <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n              ))}\r\n            </div>\r\n          ) : (\r\n            <div className=\"sidebar__chats\">\r\n              <SidebarChat addNewChatVal=\"true\" />\r\n              {search.map((room) => (\r\n                <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      ) : (\r\n        <div className={\"sidebar\"}>\r\n          <div className=\"sidebar__header\">\r\n            <Avatar src={photoURL} />{\" \"}\r\n            <p className=\"sidebar__greeting\">\r\n              {\" \"}\r\n           \r\n            </p>\r\n            <div className=\"sidebar__headerRight\">\r\n              <IconButton>\r\n                <DonutLargeIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <ChatIcon />\r\n              </IconButton>\r\n              <IconButton>\r\n                <div onClick={exitApp}>\r\n                  <ExitToAppIcon />\r\n                </div>\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div className=\"sidebar__search\">\r\n            <div className=\"sidebar__searchContainer\">\r\n              <SearchOutlined />\r\n              <input\r\n                placeholder=\"Search or Start a new chat\"\r\n                value={input}\r\n                type=\"text\"\r\n                onChange={handleChange}\r\n              />\r\n            </div>\r\n          </div>\r\n          {sidebarBool ? (\r\n            <div className=\"sidebar__chats scrollbar-juicy-peach\">\r\n              <SidebarChat addNewChatVal=\"true\" />\r\n              {rooms.length == 0 ? (\r\n                <Loader />\r\n              ) : (\r\n                rooms.map((room) => (\r\n                  <SidebarChat\r\n                    key={room.id}\r\n                    id={room.id}\r\n                    name={room.data.name}\r\n                  />\r\n                ))\r\n              )}\r\n            </div>\r\n          ) : (\r\n            <div className=\"sidebar__chats \">\r\n              <SidebarChat addNewChatVal=\"true\" />\r\n              {search.map((room) => (\r\n                <SidebarChat key={room.id} id={room.id} name={room.data.name} />\r\n              ))}\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, { useEffect, useState, useRef } from \"react\";\r\nimport { Avatar, IconButton } from \"@material-ui/core\";\r\nimport AttachFile from \"@material-ui/icons/AttachFile\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport SearchOutlined from \"@material-ui/icons/SearchOutlined\";\r\nimport InsertEmoticonIcon from \"@material-ui/icons/InsertEmoticon\";\r\nimport MicIcon from \"@material-ui/icons/Mic\";\r\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\r\nimport db from \"./firebase\";\r\nimport firebase from \"firebase\";\r\nimport \"./Chat.css\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./reducer\";\r\nimport UseWindowDimensions from \"./UseWindowDimensions\";\r\nimport useSound from \"use-sound\";\r\nimport \"emoji-mart/css/emoji-mart.css\";\r\nimport { Picker } from \"emoji-mart\";\r\nimport Linkify from \"react-linkify\";\r\n\r\nfunction Chat() {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [input, setInput] = useState(\"\");\r\n  const { roomId } = useParams();\r\n  const [roomName, setRoomName] = useState(\"false\");\r\n  const [messages, setMessages] = useState([]);\r\n  const [toggler, setToggler] = useState(true);\r\n  const displayName = localStorage.getItem(\"displayName\");\r\n  const [{ togglerState }, dispatch] = useStateValue();\r\n  const [{ photoURL }] = useStateValue();\r\n  const [emoji, setEmoji] = useState(false);\r\n  const [issendChecked, setIssendChecked] = useState(false);\r\n  const [datewise, setDateWise] = useState([]);\r\n  const [clientGMT, setClinetGMT] = useState(\"\");\r\n  const [lastseenPhoto, setLastseen] = useState(\"\");\r\n  // const [isRecChecked, setIsRecChecked]=useState(1);\r\n  const { width } = UseWindowDimensions();\r\n  var hour = 0,\r\n    extramin = 0,\r\n    minutes = 0,\r\n    hourly = 0,\r\n    GMTminutes = String(clientGMT).slice(4, 6),\r\n    scrl,\r\n    fix = 0;\r\n  // console.log(GMTminutes)\r\n\r\n  //console.log(roomId);\r\n\r\n  const [playOn] = useSound(`${process.env.PUBLIC_URL}/send.mp3`, {\r\n    volume: 0.5,\r\n  });\r\n  const [playOff] = useSound(`${process.env.PUBLIC_URL}/send.mp3`, {\r\n    volume: 0.5,\r\n  });\r\n\r\n  const addEmoji = (e) => {\r\n    let emoji = e.native;\r\n    setInput(input + emoji);\r\n  };\r\n  const checkEmojiClose = () => {\r\n    if (emoji) {\r\n      setEmoji(false);\r\n    }\r\n  };\r\n  //console.log(photoURL);\r\n  // console.log(messages);\r\n  function getTimeZone() {\r\n    var offset = new Date().getTimezoneOffset(),\r\n      o = Math.abs(offset);\r\n    return (\r\n      (offset < 0 ? \"+\" : \"-\") +\r\n      (\"00\" + Math.floor(o / 60)).slice(-2) +\r\n      \":\" +\r\n      (\"00\" + (o % 60)).slice(-2)\r\n    );\r\n  }\r\n  useEffect(() => {\r\n    setClinetGMT(getTimeZone());\r\n    //  console.log(clientGMT);\r\n  });\r\n  useEffect(() => {\r\n    setSeed(Math.floor(Math.random() * 5000));\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => {\r\n          setRoomName(snapshot.data().name);\r\n        });\r\n\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) => {\r\n          setMessages(snapshot.docs.map((doc) => doc.data()));\r\n        });\r\n    }\r\n  }, [roomId]);\r\n  useEffect(() => {\r\n    setLastseen(messages[messages.length - 1]?.photoURL);\r\n  }, [messages]);\r\n\r\n  //  console.log(lastseenPhoto);\r\n\r\n  const sendMessage = (e) => {\r\n    e.preventDefault();\r\n    // console.log(\"You Typedd >>>>\",input);\r\n    if (input.length > 0) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .add({\r\n          message: input,\r\n          name: displayName,\r\n          timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n          photoURL: localStorage.getItem(\"photoURL\"),\r\n        });\r\n      setIssendChecked(!issendChecked);\r\n      issendChecked ? playOff() : playOn();\r\n      setInput(\"\");\r\n    }\r\n  };\r\n\r\n  // for deletion in future\r\n\r\n  // let collectionRef = fs.collection(\"rooms\");\r\n  // collectionRef.where(\"name\", \"==\", name)\r\n  // .get()\r\n  // .then(querySnapshot => {\r\n  // querySnapshot.forEach((doc) => {\r\n  //     doc.ref.delete().then(() => {\r\n  //     console.log(\"Document successfully deleted!\");\r\n  //     }).catch(function(error) {\r\n  //     console.error(\"Error removing document: \", error);\r\n  //     });\r\n  // });\r\n  // })\r\n  // .catch(function(error) {\r\n  // console.log(\"Error getting documents: \", error);\r\n  // });\r\n\r\n  let blankObj = {};\r\n  let TotalObj = [];\r\n  if (messages.length > 0) {\r\n    // for( const message in messages){\r\n\r\n    // }\r\n    let checkDate = \"\";\r\n    let blankArray = [];\r\n    let dateArray = [];\r\n    messages.forEach(function (message, i) {\r\n      let messageDate = String(\r\n        new Date(message.timestamp?.toDate()).toUTCString()\r\n      ).slice(5, 12);\r\n      if (dateArray.indexOf(messageDate) === -1) {\r\n        dateArray.push(messageDate);\r\n      }\r\n    });\r\n    //let tempObj={};\r\n    var index = 0;\r\n    messages.forEach(function (message, i) {\r\n      let messageDate = String(\r\n        new Date(message.timestamp?.toDate()).toUTCString()\r\n      ).slice(5, 12);\r\n      // console.log((message.timestamp+new Date()?.getTimezoneOffset()))\r\n      if (messageDate === dateArray[index] && i == messages.length - 1) {\r\n        blankArray.push({\r\n          messageData: message.message,\r\n          name: message.name,\r\n          timestamp: message.timestamp,\r\n        });\r\n        blankObj[dateArray[index]] = blankArray;\r\n        TotalObj.push(blankObj);\r\n        blankObj = {};\r\n        blankArray = [];\r\n        blankArray.push({\r\n          messageData: message.message,\r\n          name: message.name,\r\n          timestamp: message.timestamp,\r\n        });\r\n        index = index + 1;\r\n      } else if (messageDate == dateArray[index]) {\r\n        blankArray.push({\r\n          messageData: message.message,\r\n          name: message.name,\r\n          timestamp: message.timestamp,\r\n        });\r\n      } else {\r\n        blankObj[dateArray[index]] = blankArray;\r\n        TotalObj.push(blankObj);\r\n        blankObj = {};\r\n        blankArray = [];\r\n        blankArray.push({\r\n          messageData: message.message,\r\n          name: message.name,\r\n          timestamp: message.timestamp,\r\n        });\r\n        if (messageDate != dateArray[index] && i == messages.length - 1) {\r\n          blankObj[messageDate] = blankArray;\r\n          TotalObj.push(blankObj);\r\n        }\r\n        index = index + 1;\r\n      }\r\n    });\r\n  }\r\n  useEffect(() => {\r\n    setDateWise(TotalObj);\r\n  }, [messages]);\r\n  //  console.log(TotalObj);\r\n  // if(Object.keys(datewise).length !== 0){\r\n  //     Object.entries(datewise).forEach(\r\n  //         ([key, value]) => {\r\n  //             console.log(key);\r\n  //             value.forEach((item,i)=>{\r\n  //                 console.log(item.messageData,item.name);\r\n  //             });\r\n  //         }\r\n  //     );\r\n  // }\r\n\r\n  const messagesEndRef = useRef(null);\r\n  const scrollToBottom = () => {\r\n    if (messagesEndRef.current) {\r\n      messagesEndRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    }\r\n    // console.log('called')\r\n  };\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n  });\r\n\r\n  useEffect(() => {\r\n    setToggler(!toggler);\r\n  }, [togglerState]);\r\n\r\n  useEffect(() => {\r\n    scrollToBottom();\r\n    //   scrl= document.getElementById(\"chat__box\")\r\n    //  console.log(messagesEndRef.current.clientHeight);\r\n    //  scrl.scrollIntoView(false);\r\n  }, [messages]);\r\n  const handleDrawerToggle = () => {\r\n    setToggler(!toggler);\r\n    dispatch({\r\n      type: actionTypes.SET_TOGGLER,\r\n      togglerState: togglerState + 1,\r\n    });\r\n  };\r\n  return (\r\n    <>\r\n      {width < 629 ? (\r\n        <div className={togglerState % 2 === 0 ? \"chat\" : \"chat hide__chat\"}>\r\n          <div className=\"chat__header\">\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n            >\r\n              <ArrowBackIcon />\r\n            </IconButton>\r\n            <Avatar src={lastseenPhoto} />\r\n            <div className=\"chat__headerInfo\">\r\n              <h3>{roomName}</h3>\r\n              <p className=\"header__lastSeen\">\r\n                last seen{\" \"}\r\n                {messages.length !== 0\r\n                  ? messages[messages.length - 1].timestamp\r\n                      ?.toDate()\r\n                      .toUTCString()\r\n                  : \"Loading\"}\r\n              </p>\r\n            </div>\r\n            <div className=\"chat__headerRight\">\r\n              <IconButton>\r\n                <SearchOutlined />\r\n              </IconButton>\r\n              <IconButton>\r\n                <AttachFile />\r\n              </IconButton>\r\n              <IconButton>\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div className=\"chat__header__absolute\">\r\n            <IconButton\r\n              color=\"inherit\"\r\n              aria-label=\"open drawer\"\r\n              edge=\"start\"\r\n              onClick={handleDrawerToggle}\r\n            >\r\n              <ArrowBackIcon />\r\n            </IconButton>\r\n            <Avatar src={lastseenPhoto} />\r\n            <div className=\"chat__headerInfo\">\r\n              <h3>{roomName}</h3>\r\n              <p className=\"header__lastSeen\">\r\n                last seen{\" \"}\r\n                {messages.length !== 0\r\n                  ? String(\r\n                      messages[messages.length - 1].timestamp\r\n                        ?.toDate()\r\n                        .toUTCString()\r\n                    ).slice(0, 22)\r\n                  : \"Loading\"}\r\n              </p>\r\n            </div>\r\n            <div className=\"chat__headerRight\">\r\n              <IconButton>\r\n                <SearchOutlined />\r\n              </IconButton>\r\n              <IconButton>\r\n                <AttachFile />\r\n              </IconButton>\r\n              <IconButton>\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div className=\"chat__body\">\r\n            {datewise.length > 0\r\n              ? datewise.map(\r\n                  (item, i) =>\r\n                    //  <div className=\"chat__body__daystamp\">\r\n                    //     <p className=\"chat__body__daystamp__title\">{Object.keys(item)}</p>\r\n                    //  </div>\r\n                    item[Object.keys(item)].map((e, i) =>\r\n                      i == 0 ? (\r\n                        <>\r\n                          {String(Object.keys(item)).slice(0, 2) !== \"id\" &&\r\n                          parseInt(String(Object.keys(item)).slice(0, 2)) ? (\r\n                            <div className=\"chat__body__daystamp\">\r\n                              <p className=\"chat__body__daystamp__title\">\r\n                                {parseInt(\r\n                                  String(Object.keys(item)).slice(0, 2)\r\n                                ) == parseInt(String(new Date().getDate()))\r\n                                  ? \"TODAY\"\r\n                                  : Object.keys(item)}\r\n                              </p>\r\n                            </div>\r\n                          ) : null}\r\n                          <p\r\n                            className={`chat__messages ${\r\n                              e.name === displayName && \"chat__reciever\"\r\n                            }`}\r\n                          >\r\n                            <span className=\"chat__name\">\r\n                              {e.name.substr(0, e.name.indexOf(\" \"))}\r\n                            </span>\r\n                            <Linkify>{e.messageData}</Linkify>\r\n                            <span className=\"chat__timestamp\">\r\n                              <div className=\"hidden\">\r\n                                {\r\n                                  (extramin =\r\n                                    parseInt(\r\n                                      String(\r\n                                        new Date(\r\n                                          e.timestamp?.toDate()\r\n                                        ).toUTCString()\r\n                                      ).slice(20, 22)\r\n                                    ) +\r\n                                      parseInt(GMTminutes) >\r\n                                    60\r\n                                      ? (parseInt(\r\n                                          String(\r\n                                            new Date(\r\n                                              e.timestamp?.toDate()\r\n                                            ).toUTCString()\r\n                                          ).slice(20, 22)\r\n                                        ) +\r\n                                          parseInt(GMTminutes)) %\r\n                                        60\r\n                                      : 0)\r\n                                }\r\n\r\n                                {\r\n                                  (minutes =\r\n                                    parseInt(\r\n                                      String(\r\n                                        new Date(\r\n                                          e.timestamp?.toDate()\r\n                                        ).toUTCString()\r\n                                      ).slice(20, 22)\r\n                                    ) +\r\n                                      parseInt(GMTminutes) +\r\n                                      extramin -\r\n                                      fix >\r\n                                    60\r\n                                      ? (parseInt(\r\n                                          String(\r\n                                            new Date(\r\n                                              e.timestamp?.toDate()\r\n                                            ).toUTCString()\r\n                                          ).slice(20, 22)\r\n                                        ) +\r\n                                          parseInt(GMTminutes) +\r\n                                          extramin -\r\n                                          fix) %\r\n                                        60\r\n                                      : parseInt(\r\n                                          String(\r\n                                            new Date(\r\n                                              e.timestamp?.toDate()\r\n                                            ).toUTCString()\r\n                                          ).slice(20, 22)\r\n                                        ) +\r\n                                        parseInt(GMTminutes) +\r\n                                        extramin -\r\n                                        fix)\r\n                                }\r\n                                {(hour = extramin > 0 ? 1 : 0)}\r\n\r\n                                {\r\n                                  (hourly =\r\n                                    parseInt(\r\n                                      String(\r\n                                        new Date(\r\n                                          e.timestamp?.toDate()\r\n                                        ).toUTCString()\r\n                                      ).slice(17, 19)\r\n                                    ) +\r\n                                      hour +\r\n                                      parseInt(clientGMT) >\r\n                                    24\r\n                                      ? (parseInt(\r\n                                          String(\r\n                                            new Date(\r\n                                              e.timestamp?.toDate()\r\n                                            ).toUTCString()\r\n                                          ).slice(17, 19)\r\n                                        ) +\r\n                                          hour +\r\n                                          parseInt(clientGMT)) %\r\n                                        24\r\n                                      : parseInt(\r\n                                          String(\r\n                                            new Date(\r\n                                              e.timestamp?.toDate()\r\n                                            ).toUTCString()\r\n                                          ).slice(17, 19)\r\n                                        ) +\r\n                                        hour +\r\n                                        parseInt(clientGMT))\r\n                                }\r\n                              </div>\r\n                              {hourly ? hourly % 12 : \"00\"}\r\n                              {\" : \"}\r\n                              {minutes !== 0\r\n                                ? minutes < 10\r\n                                  ? \"0\" + minutes\r\n                                  : minutes\r\n                                : \"00\"}\r\n                              {hourly > 12 ? \" PM\" : \" AM\"}\r\n                            </span>\r\n                          </p>\r\n                        </>\r\n                      ) : (\r\n                        <p\r\n                          className={`chat__messages ${\r\n                            e.name === displayName && \"chat__reciever\"\r\n                          }`}\r\n                        >\r\n                          <span className=\"chat__name\">\r\n                            {e.name.substr(0, e.name.indexOf(\" \"))}\r\n                          </span>\r\n                          <Linkify>{e.messageData}</Linkify>\r\n                          <span className=\"chat__timestamp\">\r\n                            <div className=\"hidden\">\r\n                              {\r\n                                (extramin =\r\n                                  parseInt(\r\n                                    String(\r\n                                      new Date(\r\n                                        e.timestamp?.toDate()\r\n                                      ).toUTCString()\r\n                                    ).slice(20, 22)\r\n                                  ) +\r\n                                    parseInt(GMTminutes) >\r\n                                  60\r\n                                    ? (parseInt(\r\n                                        String(\r\n                                          new Date(\r\n                                            e.timestamp?.toDate()\r\n                                          ).toUTCString()\r\n                                        ).slice(20, 22)\r\n                                      ) +\r\n                                        parseInt(GMTminutes)) %\r\n                                      60\r\n                                    : 0)\r\n                              }\r\n\r\n                              {\r\n                                (minutes =\r\n                                  parseInt(\r\n                                    String(\r\n                                      new Date(\r\n                                        e.timestamp?.toDate()\r\n                                      ).toUTCString()\r\n                                    ).slice(20, 22)\r\n                                  ) +\r\n                                    parseInt(GMTminutes) +\r\n                                    extramin -\r\n                                    fix >\r\n                                  60\r\n                                    ? (parseInt(\r\n                                        String(\r\n                                          new Date(\r\n                                            e.timestamp?.toDate()\r\n                                          ).toUTCString()\r\n                                        ).slice(20, 22)\r\n                                      ) +\r\n                                        parseInt(GMTminutes) +\r\n                                        extramin -\r\n                                        fix) %\r\n                                      60\r\n                                    : parseInt(\r\n                                        String(\r\n                                          new Date(\r\n                                            e.timestamp?.toDate()\r\n                                          ).toUTCString()\r\n                                        ).slice(20, 22)\r\n                                      ) +\r\n                                      parseInt(GMTminutes) +\r\n                                      extramin -\r\n                                      fix)\r\n                              }\r\n                              {(hour = extramin > 0 ? 1 : 0)}\r\n\r\n                              {\r\n                                (hourly =\r\n                                  parseInt(\r\n                                    String(\r\n                                      new Date(\r\n                                        e.timestamp?.toDate()\r\n                                      ).toUTCString()\r\n                                    ).slice(17, 19)\r\n                                  ) +\r\n                                    hour +\r\n                                    parseInt(clientGMT) >\r\n                                  24\r\n                                    ? (parseInt(\r\n                                        String(\r\n                                          new Date(\r\n                                            e.timestamp?.toDate()\r\n                                          ).toUTCString()\r\n                                        ).slice(17, 19)\r\n                                      ) +\r\n                                        hour +\r\n                                        parseInt(clientGMT)) %\r\n                                      24\r\n                                    : parseInt(\r\n                                        String(\r\n                                          new Date(\r\n                                            e.timestamp?.toDate()\r\n                                          ).toUTCString()\r\n                                        ).slice(17, 19)\r\n                                      ) +\r\n                                      hour +\r\n                                      parseInt(clientGMT))\r\n                              }\r\n                            </div>\r\n                            {hourly ? hourly % 12 : \"00\"}\r\n                            {\" : \"}\r\n                            {minutes !== 0\r\n                              ? minutes < 10\r\n                                ? \"0\" + minutes\r\n                                : minutes\r\n                              : \"00\"}\r\n                            {hourly > 12 ? \" PM\" : \" AM\"}\r\n                          </span>\r\n                        </p>\r\n                      )\r\n                    )\r\n                  //  console.log(Object.keys(item))\r\n                  // console.log(item[Object.keys(item)])\r\n                )\r\n              : // <div className=\"chat__body__daystamp\">\r\n                //     <p className=\"chat__body__daystamp__title\"></p>\r\n                //  </div>\r\n                // Object.entries(datewise).forEach(\r\n                //     ([key, value]) => {\r\n\r\n                //     {\r\n                //     value.forEach((item,i)=>{\r\n                //             console.log(item.messageData,item.name)\r\n                //         })\r\n                //     }\r\n                // }\r\n                // )\r\n\r\n                null}\r\n            <div ref={messagesEndRef}></div>\r\n          </div>\r\n\r\n          <div className=\"chat__footer\">\r\n            {/* <InsertEmoticonIcon onClick={<Picker onSelect={addEmoji} />}/> */}\r\n            <IconButton>\r\n              {/* <InsertEmoticonIcon /> */}\r\n              <InsertEmoticonIcon\r\n                className=\"yellow\"\r\n                onClick={() => setEmoji(!emoji)}\r\n              />\r\n              {emoji ? <Picker onSelect={addEmoji} /> : null}\r\n            </IconButton>\r\n            {/* <span>\r\n                                <Picker onSelect={addEmoji} />\r\n                            </span> */}\r\n\r\n            <form>\r\n              <input\r\n                value={input}\r\n                type=\"text\"\r\n                placeholder=\"Type a message\"\r\n                onChange={(e) => setInput(e.target.value)}\r\n                onClick={checkEmojiClose}\r\n                disabled={\r\n                  roomName === \"Admin: Ali\"\r\n                    ? (displayName == \"Shekh Aliul WqnNsFNEPr\" ? true : false)\r\n                      ? false\r\n                      : true\r\n                    : false\r\n                }\r\n              />\r\n              <button type=\"submit\" onClick={sendMessage}>\r\n                Send A message\r\n              </button>\r\n            </form>\r\n            <IconButton>\r\n              <MicIcon />\r\n            </IconButton>\r\n          </div>\r\n\r\n          <div className=\"chat__footer__absolute\">\r\n            <IconButton>\r\n              <InsertEmoticonIcon />\r\n            </IconButton>\r\n            <form>\r\n              <input\r\n                value={input}\r\n                type=\"text\"\r\n                placeholder=\"Type a message\"\r\n                onChange={(e) => setInput(e.target.value)}\r\n                disabled={roomName == \"Admin: Ali\" ? true : false}\r\n              />\r\n              <button type=\"submit\" onClick={sendMessage}>\r\n                Send A message\r\n              </button>\r\n            </form>\r\n            <IconButton>\r\n              <MicIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className={\"chat\"}>\r\n          <div className=\"chat__header\">\r\n            <Avatar src={lastseenPhoto} />\r\n            <div className=\"chat__headerInfo\">\r\n              <h3>{roomName}</h3>\r\n              <p className=\"header__lastSeen\">\r\n                last seen{\" \"}\r\n                {messages.length !== 0\r\n                  ? String(\r\n                      messages[messages.length - 1].timestamp\r\n                        ?.toDate()\r\n                        .toUTCString()\r\n                    ).slice(0, 22)\r\n                  : \"Loading\"}\r\n              </p>\r\n            </div>\r\n            <div className=\"chat__headerRight\">\r\n              <IconButton>\r\n                <SearchOutlined />\r\n              </IconButton>\r\n              <IconButton>\r\n                <AttachFile />\r\n              </IconButton>\r\n              <IconButton>\r\n                <MoreVertIcon />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"chat__body scrollbar-juicy-peach\"\r\n            onClick={checkEmojiClose}\r\n          >\r\n            {datewise.length > 0\r\n              ? datewise.map(\r\n                  (item, i) =>\r\n                    item[Object.keys(item)].map((e, i) =>\r\n                      i == 0 ? (\r\n                        <>\r\n                          {String(Object.keys(item))?.slice(0, 2) !== \"id\" &&\r\n                          Object.keys(item) != undefined ? (\r\n                            <div className=\"chat__body__daystamp\">\r\n                              <p className=\"chat__body__daystamp__title\">\r\n                                {parseInt(\r\n                                  String(Object.keys(item)).slice(0, 2)\r\n                                ) == parseInt(String(new Date().getDate()))\r\n                                  ? \"TODAY\"\r\n                                  : Object.keys(item)}\r\n                              </p>\r\n                            </div>\r\n                          ) : (\r\n                            \"\"\r\n                          )}\r\n                          <p\r\n                            className={`chat__messages ${\r\n                              e.name === displayName && \"chat__reciever\"\r\n                            }`}\r\n                          >\r\n                            <span className=\"chat__name\">\r\n                              {e.name.substr(0, e.name.indexOf(\" \"))}\r\n                            </span>\r\n                            <Linkify\r\n                              properties={{\r\n                                target: \"_blank\",\r\n                                style: { color: \"red\", fontWeight: \"bold\" },\r\n                              }}\r\n                            >\r\n                              {e.messageData}\r\n                            </Linkify>\r\n                            <span className=\"chat__timestamp\">\r\n                              <div className=\"hidden\">\r\n                                {\r\n                                  (extramin =\r\n                                    parseInt(\r\n                                      String(\r\n                                        new Date(\r\n                                          e.timestamp?.toDate()\r\n                                        ).toUTCString()\r\n                                      ).slice(20, 22)\r\n                                    ) +\r\n                                      parseInt(GMTminutes) >\r\n                                    60\r\n                                      ? (parseInt(\r\n                                          String(\r\n                                            new Date(\r\n                                              e.timestamp?.toDate()\r\n                                            ).toUTCString()\r\n                                          ).slice(20, 22)\r\n                                        ) +\r\n                                          parseInt(GMTminutes)) %\r\n                                        60\r\n                                      : 0)\r\n                                }\r\n\r\n                                {\r\n                                  (minutes =\r\n                                    parseInt(\r\n                                      String(\r\n                                        new Date(\r\n                                          e.timestamp?.toDate()\r\n                                        ).toUTCString()\r\n                                      ).slice(20, 22)\r\n                                    ) +\r\n                                      parseInt(GMTminutes) +\r\n                                      extramin -\r\n                                      fix >\r\n                                    60\r\n                                      ? (parseInt(\r\n                                          String(\r\n                                            new Date(\r\n                                              e.timestamp?.toDate()\r\n                                            ).toUTCString()\r\n                                          ).slice(20, 22)\r\n                                        ) +\r\n                                          parseInt(GMTminutes) +\r\n                                          extramin -\r\n                                          fix) %\r\n                                        60\r\n                                      : parseInt(\r\n                                          String(\r\n                                            new Date(\r\n                                              e.timestamp?.toDate()\r\n                                            ).toUTCString()\r\n                                          ).slice(20, 22)\r\n                                        ) +\r\n                                        parseInt(GMTminutes) +\r\n                                        extramin -\r\n                                        fix)\r\n                                }\r\n                                {(hour = extramin > 0 ? 1 : 0)}\r\n\r\n                                {\r\n                                  (hourly =\r\n                                    parseInt(\r\n                                      String(\r\n                                        new Date(\r\n                                          e.timestamp?.toDate()\r\n                                        ).toUTCString()\r\n                                      ).slice(17, 19)\r\n                                    ) +\r\n                                      hour +\r\n                                      parseInt(clientGMT) >\r\n                                    24\r\n                                      ? (parseInt(\r\n                                          String(\r\n                                            new Date(\r\n                                              e.timestamp?.toDate()\r\n                                            ).toUTCString()\r\n                                          ).slice(17, 19)\r\n                                        ) +\r\n                                          hour +\r\n                                          parseInt(clientGMT)) %\r\n                                        24\r\n                                      : parseInt(\r\n                                          String(\r\n                                            new Date(\r\n                                              e.timestamp?.toDate()\r\n                                            ).toUTCString()\r\n                                          ).slice(17, 19)\r\n                                        ) +\r\n                                        hour +\r\n                                        parseInt(clientGMT))\r\n                                }\r\n                              </div>\r\n                              {hourly ? hourly % 12 : \"00\"}\r\n                              {\" : \"}\r\n                              {minutes !== 0\r\n                                ? minutes < 10\r\n                                  ? \"0\" + minutes\r\n                                  : minutes\r\n                                : \"00\"}\r\n                              {hourly > 12 ? \" PM\" : \" AM\"}\r\n                            </span>\r\n                          </p>\r\n                        </>\r\n                      ) : (\r\n                        <p\r\n                          className={`chat__messages ${\r\n                            e.name === displayName && \"chat__reciever\"\r\n                          }`}\r\n                        >\r\n                          <span className=\"chat__name\">\r\n                            {e.name.substr(0, e.name.indexOf(\" \"))}\r\n                          </span>\r\n                          <Linkify>{e.messageData}</Linkify>\r\n                          <span className=\"chat__timestamp\">\r\n                            <div className=\"hidden\">\r\n                              {\r\n                                (extramin =\r\n                                  parseInt(\r\n                                    String(\r\n                                      new Date(\r\n                                        e.timestamp?.toDate()\r\n                                      ).toUTCString()\r\n                                    ).slice(20, 22)\r\n                                  ) +\r\n                                    parseInt(GMTminutes) >\r\n                                  60\r\n                                    ? (parseInt(\r\n                                        String(\r\n                                          new Date(\r\n                                            e.timestamp?.toDate()\r\n                                          ).toUTCString()\r\n                                        ).slice(20, 22)\r\n                                      ) +\r\n                                        parseInt(GMTminutes)) %\r\n                                      60\r\n                                    : 0)\r\n                              }\r\n\r\n                              {\r\n                                (minutes =\r\n                                  parseInt(\r\n                                    String(\r\n                                      new Date(\r\n                                        e.timestamp?.toDate()\r\n                                      ).toUTCString()\r\n                                    ).slice(20, 22)\r\n                                  ) +\r\n                                    parseInt(GMTminutes) +\r\n                                    extramin -\r\n                                    fix >\r\n                                  60\r\n                                    ? (parseInt(\r\n                                        String(\r\n                                          new Date(\r\n                                            e.timestamp?.toDate()\r\n                                          ).toUTCString()\r\n                                        ).slice(20, 22)\r\n                                      ) +\r\n                                        parseInt(GMTminutes) +\r\n                                        extramin -\r\n                                        fix) %\r\n                                      60\r\n                                    : parseInt(\r\n                                        String(\r\n                                          new Date(\r\n                                            e.timestamp?.toDate()\r\n                                          ).toUTCString()\r\n                                        ).slice(20, 22)\r\n                                      ) +\r\n                                      parseInt(GMTminutes) +\r\n                                      extramin -\r\n                                      fix)\r\n                              }\r\n                              {(hour = extramin > 0 ? 1 : 0)}\r\n\r\n                              {\r\n                                (hourly =\r\n                                  parseInt(\r\n                                    String(\r\n                                      new Date(\r\n                                        e.timestamp?.toDate()\r\n                                      ).toUTCString()\r\n                                    ).slice(17, 19)\r\n                                  ) +\r\n                                    hour +\r\n                                    parseInt(clientGMT) >\r\n                                  24\r\n                                    ? (parseInt(\r\n                                        String(\r\n                                          new Date(\r\n                                            e.timestamp?.toDate()\r\n                                          ).toUTCString()\r\n                                        ).slice(17, 19)\r\n                                      ) +\r\n                                        hour +\r\n                                        parseInt(clientGMT)) %\r\n                                      24\r\n                                    : parseInt(\r\n                                        String(\r\n                                          new Date(\r\n                                            e.timestamp?.toDate()\r\n                                          ).toUTCString()\r\n                                        ).slice(17, 19)\r\n                                      ) +\r\n                                      hour +\r\n                                      parseInt(clientGMT))\r\n                              }\r\n                            </div>\r\n                            {hourly ? hourly % 12 : \"00\"}\r\n                            {\" : \"}\r\n                            {minutes !== 0\r\n                              ? minutes < 10\r\n                                ? \"0\" + minutes\r\n                                : minutes\r\n                              : \"00\"}\r\n                            {hourly > 12 ? \" PM\" : \" AM\"}\r\n                          </span>\r\n                        </p>\r\n                      )\r\n                    )\r\n                  //  console.log(Object.keys(item))\r\n                  // console.log(item[Object.keys(item)])\r\n                )\r\n              : // <div className=\"chat__body__daystamp\">\r\n                //     <p className=\"chat__body__daystamp__title\"></p>\r\n                //  </div>\r\n                // Object.entries(datewise).forEach(\r\n                //     ([key, value]) => {\r\n\r\n                //     {\r\n                //     value.forEach((item,i)=>{\r\n                //             console.log(item.messageData,item.name)\r\n                //         })\r\n                //     }\r\n                // }\r\n                // )\r\n\r\n                null}\r\n            <div ref={messagesEndRef} id=\"chat__box\"></div>\r\n          </div>\r\n\r\n          <div className=\"chat__footer\">\r\n            <IconButton>\r\n              {/* <InsertEmoticonIcon /> */}\r\n              <InsertEmoticonIcon\r\n                className=\"yellow\"\r\n                onClick={() => setEmoji(!emoji)}\r\n              />\r\n              {emoji ? <Picker onSelect={addEmoji} /> : null}\r\n            </IconButton>\r\n            <form>\r\n              <input\r\n                value={input}\r\n                type=\"text\"\r\n                placeholder=\"Type a message\"\r\n                onChange={(e) => setInput(e.target.value)}\r\n                onClick={checkEmojiClose}\r\n                disabled={\r\n                  roomName === \"Admin: Ali\"\r\n                    ? (displayName == \"Shekh Aliul WqnNsFNEPr\" ? true : false)\r\n                      ? false\r\n                      : true\r\n                    : false\r\n                }\r\n              />\r\n              <button type=\"submit\" onClick={sendMessage}>\r\n                Send A message\r\n              </button>\r\n            </form>\r\n            <IconButton>\r\n              <MicIcon />\r\n            </IconButton>\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Chat;\r\n","import React from \"react\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport \"./Login.css\";\r\nimport { auth, provider } from \"./firebase\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport { actionTypes } from \"./reducer\";\r\nfunction Login() {\r\n  const [{}, dispatch] = useStateValue();\r\n\r\n  const signIn = () => {\r\n    auth\r\n      .signInWithPopup(provider)\r\n      .then((result) => {\r\n        console.log(result.user);\r\n        dispatch({\r\n          type: actionTypes.SET_USER,\r\n          user: result.user,\r\n        });\r\n        dispatch({\r\n          type: actionTypes.SET_SESSION,\r\n          uid: result.user.uid,\r\n          displayName: result.user.displayName,\r\n          photoURL: result.user.photoURL,\r\n        });\r\n      })\r\n      .catch((err) => alert(err.message));\r\n  };\r\n\r\n  return (\r\n    <div className=\"login\">\r\n      <div className=\"login__container\">\r\n        <img\r\n          src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/225px-WhatsApp.svg.png\"\r\n          alt=\"whatsapp\"\r\n        />\r\n        <div className=\"login__text\">\r\n          <h1>Sign in to Whatsapp</h1>\r\n        </div>\r\n        <Button onClick={signIn}>Sign In with Google</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport Chat from \"./Chat\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport Login from \"./Login\";\r\nimport { useStateValue } from \"./StateProvider\";\r\nimport UseWindowDimensions from \"./UseWindowDimensions\";\r\n\r\nfunction App() {\r\n  const [{ user }, dispatch] = useStateValue();\r\n  const { width } = UseWindowDimensions();\r\n  const uid =\r\n    localStorage.getItem(\"uid\") !== undefined\r\n      ? localStorage.getItem(\"uid\")\r\n      : null;\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      {!user && !uid ? (\r\n        <Login />\r\n      ) : (\r\n        <div className=\"app__body\">\r\n          <Router>\r\n            <Sidebar />\r\n            <Switch>\r\n              <Route path=\"/rooms/:roomId\">\r\n                <Chat />\r\n              </Route>\r\n              <Route path=\"/\">\r\n                <Chat />\r\n              </Route>\r\n            </Switch>\r\n          </Router>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === \"localhost\" ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === \"[::1]\" ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener(\"load\", () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            \"This web app is being served cache-first by a service \" +\r\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then((registration) => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === \"installed\") {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                \"New content is available and will be used when all \" +\r\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log(\"Content is cached for offline use.\");\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch((error) => {\r\n      console.error(\"Error during service worker registration:\", error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { \"Service-Worker\": \"script\" },\r\n  })\r\n    .then((response) => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get(\"content-type\");\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then((registration) => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        \"No internet connection found. App is running in offline mode.\"\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if (\"serviceWorker\" in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then((registration) => {\r\n        registration.unregister();\r\n      })\r\n      .catch((error) => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport reducer, { initialState } from \"./reducer\";\r\nimport { StateProvider } from \"./StateProvider\";\r\n\r\nReactDOM.render(\r\n  <StateProvider initialState={initialState} reducer={reducer}>\r\n    <App />\r\n  </StateProvider>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}